setwd("C:/Users/delpi/Google Drive/COURS/AgroParisTech/2A/UC2/TD/3483462/3483462/Proteome/CLUSTERING")
library(knitr)
library(pheatmap)
library(RColorBrewer)
#if (!requireNamespace("BiocManager", quietly = TRUE))
#  install.packages("BiocManager")
#BiocManager::install("coseq")
library(coseq)
library(ggplot2)
library(FactoMineR)
table1<-read.table("proteome_selection_214.csv", sep=";", dec=".", header=T,row.names=1)
temperature<-factor(rep(c("Low","Medium","Elevated"),each=3),levels=c("Low","Medium","Elevated"))
# créer un tableau d'annotations des ech°
# pour rajouter un code couleur d'appartenance des ech° dans l'arbre
sample_group <- data.frame(temperature = temperature)
row.names(sample_group) <- row.names(table1)
sample_group
# éditer le code couleur pour les groupes
# pour être identique aux couleurs de l'ACP
my_colour = list(
temperature = c(
"Low" = "blue",
"Medium" = "green4",
"Elevated" = "orange"))
my_colour
pheatmap(
as.matrix(scale(table1)),
color = colorRampPalette(rev(brewer.pal(
n = 11, name = "RdYlBu"
)))(100),
clustering_method = "ward.D2",
annotation_row = sample_group,
annotation_colors = my_colour,
cutree_rows = 3,
cutree_cols = 4,
show_colnames = F,
main = "Heatmap",
cex = 1,
border_color = "black",
)
View(table1)
sample_group <- data.frame(temperature = temperature)
row.names(sample_group) <- row.names(table1)
sample_group
pheatmap(
as.matrix(scale(table1)),
color = colorRampPalette(rev(brewer.pal(
n = 11, name = "RdYlBu"
)))(100),
clustering_method = "ward.D2",
annotation_row = sample_group,
annotation_colors = my_colour,
cutree_rows = 3,
cutree_cols = 4,
show_colnames = F,
main = "Heatmap",
cex = 1,
border_color = "black",
)
pheatmap(
as.matrix(scale(table1)),
color = colorRampPalette(rev(brewer.pal(
n = 11, name = "RdYlBu"
)))(100),
clustering_method = "ward.D2",
annotation_row = sample_group,
annotation_colors = my_colour,
cutree_rows = 3,
cutree_cols = 4,
show_colnames = F,
main = "Heatmap",
cex = 1,
border_color = "black",
)
### Création d'un objet contenant les données de la heatmap
```{r, fig.show="hide"}
my_heatmap <- pheatmap(
as.matrix(scale(table1)),
color = colorRampPalette(rev(brewer.pal(
n = 11, name = "RdYlBu"
)))(100),
clustering_method = "ward.D2",
annotation_row = sample_group,
annotation_colors = my_colour,
cutree_rows = 3,
cutree_cols = 4,
show_colnames = F,
main = "Heatmap",
cex = 1,
border_color = "black",
silent=TRUE
)
# pour les clusters d'individus en lignes
# reprendre ici le nombre de clusters d'individus
# demandé dans la heatmap avec cutree_rows = 3
# en choisissant la même valeur pour k
kable(sort(cutree(my_heatmap$tree_row, k=3)))
# pour les clusters de variables en colonnes
# reprendre ici le nombre de clusters de variables
# demandé dans la heatmap avec cutree_cols = 4
# en choisissant la même valeur pour k
cluster_heatmap_variables <- cutree(my_heatmap$tree_col, k=4)[my_heatmap$tree_col[["order"]]]
kable(head(cluster_heatmap_variables,10))
# taille des clusters de variables
kable(table(cluster_heatmap_variables))
### Création d'un objet contenant les données de la heatmap
```{r, fig.show="hide"}
my_heatmap <- pheatmap(
as.matrix(scale(table1)),
color = colorRampPalette(rev(brewer.pal(
n = 11, name = "RdYlBu"
)))(100),
clustering_method = "ward.D2",
annotation_row = sample_group,
annotation_colors = my_colour,
cutree_rows = 3,
cutree_cols = 4,
show_colnames = F,
main = "Heatmap",
cex = 1,
border_color = "black",
silent=TRUE
)
